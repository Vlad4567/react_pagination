{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","elementsArray","Array","from","length","_","index","className","classNames","disabled","href","onClick","map","page","active","items","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","setPerPage","itemsToRender","slice","indexOf","id","value","onChange","selection","selectedValue","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAgBC,MAAMC,KAC1B,CAAEC,OAAQN,IACV,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAGxB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAAUb,GAAe,IAH7B,SAOE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAAed,GAAe,EAC9Be,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,oBAUDK,EAAcW,KAAI,SAACC,GAClB,OACE,oBAEEN,UACEC,IAAW,YAAa,CAAEM,OAAQD,IAASjB,IAH/C,SAME,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMd,EAAagB,IAJ9B,SAMGA,KAXEA,MAgBX,oBAAIN,UAAWC,IACb,YACA,CACEC,SAAUb,GAAeE,IAH7B,SAOE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAed,GAAeE,EAC9Ba,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,wBC7DFmB,ECNC,SAAoBZ,EAAca,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIf,EAAMe,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB2B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB6B,EAAhB,KACMC,EAA0BV,EAAMW,OACnC9B,EAAc,GAAKD,EACnBC,EAAeD,GAUlB,OACE,sBAAKY,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBAEIX,EAFJ,mBAIImB,EAAMY,QAAQF,EAAc,IAAM,EAJtC,cAMIV,EAAMY,QAAQF,EAAcA,EAAcrB,OAAS,IAAM,EAN7D,eAOSW,EAAMX,OAPf,OAUA,sBAAKG,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOlC,EACPmC,SA5BV,SAAyBC,GACvB,IAAMC,GAAiBD,EAAUE,OAAOJ,MAExCL,EAAWQ,GACXT,EAAe,IAmBT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOqB,EAAMX,OACbT,QAASA,EACTC,YAAaA,EACbC,aAAc0B,IAGhB,6BAEIE,EACGb,KAAI,SAAAuB,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAAoBA,aEnElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f38333e1.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  total: number\n  perPage: number\n  currentPage: number\n  onPageChange: (newPage: number) => void\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const elementsArray = Array.from(\n    { length: lastPage },\n    (_, index) => index + 1,\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: currentPage <= 1,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage <= 1}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {elementsArray.map((page) => {\n        return (\n          <li\n            key={page}\n            className={\n              classNames('page-item', { active: page === currentPage })\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: currentPage >= lastPage,\n        },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage >= lastPage}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const itemsToRender: string[] = items.slice(\n    (currentPage - 1) * perPage,\n    (currentPage) * perPage,\n  );\n\n  function setItemsPerPage(selection: React.ChangeEvent<HTMLSelectElement>) {\n    const selectedValue = +selection.target.value;\n\n    setPerPage(selectedValue);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${\n          currentPage\n        } (items ${\n          items.indexOf(itemsToRender[0]) + 1\n        } - ${\n          items.indexOf(itemsToRender[itemsToRender.length - 1]) + 1\n        } of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={setItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {\n          itemsToRender\n            .map(item => (\n              <li data-cy=\"item\">{item}</li>\n            ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}